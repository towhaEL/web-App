# -*- coding: utf-8 -*-
"""cgan_utils.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TF00rq6hmEEwYH7r7V1JRn4QtcbK0f34
"""

import torch
import torch.nn as nn

class Generator(nn.Module):
    def __init__(self, latent_dim, num_classes, img_shape):
        super().__init__()
        self.label_emb = nn.Embedding(num_classes, num_classes)
        self.model = nn.Sequential(
            nn.Linear(latent_dim + num_classes, 128),
            nn.ReLU(),
            nn.Linear(128, 256),
            nn.BatchNorm1d(256),
            nn.ReLU(),
            nn.Linear(256, 512),
            nn.BatchNorm1d(512),
            nn.ReLU(),
            nn.Linear(512, int(torch.prod(torch.tensor(img_shape)))),
            nn.Tanh()
        )
        self.img_shape = img_shape

    def forward(self, z, labels):
        input = torch.cat((z, self.label_emb(labels)), dim=1)
        output = self.model(input)
        return output.view(output.size(0), *self.img_shape)